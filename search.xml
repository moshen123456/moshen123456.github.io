<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>今日校园部署到腾讯云函数</title>
      <link href="2021/02/24/zhuyi/"/>
      <url>2021/02/24/zhuyi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>前言：此方法不做太多描述，如果不懂请到<a href="https://search.bilibili.com/all?keyword=%E4%BB%8A%E6%97%A5%E6%A0%A1%E5%9B%AD&from_source=nav_search_new">b站</a>上查找.</p></blockquote><h3 id="注：b站上的视频可以将代码弄上，但里面的文件代码可能不适用"><a href="#注：b站上的视频可以将代码弄上，但里面的文件代码可能不适用" class="headerlink" title="注：b站上的视频可以将代码弄上，但里面的文件代码可能不适用"></a>注：b站上的视频可以将代码弄上，但里面的文件代码可能不适用</h3><h1 id="一，准备"><a href="#一，准备" class="headerlink" title="一，准备"></a>一，准备</h1><p><img src="https://i.loli.net/2021/02/24/3yPY46nSK5gd89X.png"></p><h3 id="将这俩文件放在一个文件夹里"><a href="#将这俩文件放在一个文件夹里" class="headerlink" title="将这俩文件放在一个文件夹里"></a>将这俩文件放在一个文件夹里</h3><h1 id="二，部署腾讯云基础步骤"><a href="#二，部署腾讯云基础步骤" class="headerlink" title="二，部署腾讯云基础步骤"></a>二，部署腾讯云基础步骤</h1><h3 id="1-打开浏览器搜腾讯云"><a href="#1-打开浏览器搜腾讯云" class="headerlink" title="1.打开浏览器搜腾讯云"></a>1.打开浏览器搜腾讯云</h3><p><img src="https://i.loli.net/2021/02/24/zI8A1y4fmB6oKDx.png"></p><h3 id="2-进入登录或注册然后点击控制台"><a href="#2-进入登录或注册然后点击控制台" class="headerlink" title="2.进入登录或注册然后点击控制台"></a>2.进入登录或注册然后点击控制台</h3><p><img src="https://i.loli.net/2021/02/24/3U9lpoxjiZyucPX.png"></p><h3 id="3-在控制台中搜索云函数，并点击"><a href="#3-在控制台中搜索云函数，并点击" class="headerlink" title="3.在控制台中搜索云函数，并点击"></a>3.在控制台中搜索云函数，并点击</h3><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://i.loli.net/2021/02/24/pvU8x4gynIWKJDC.png"></h1><h1 id="三，部署云函数重要步骤"><a href="#三，部署云函数重要步骤" class="headerlink" title="三，部署云函数重要步骤"></a>三，部署云函数重要步骤</h1><h3 id="1-在云函数中点击层，并把层依赖上传"><a href="#1-在云函数中点击层，并把层依赖上传" class="headerlink" title="1.在云函数中点击层，并把层依赖上传"></a>1.在云函数中点击层，并把层依赖上传</h3><p><img src="https://i.loli.net/2021/02/24/56kxShACQRJjFve.png"></p><p>新建如下图：名称随意还有描述，运行环境选择python3.6</p><p><img src="https://i.loli.net/2021/02/24/AMEOL8d4zl93XHj.png"></p><h2 id="2-函数部署"><a href="#2-函数部署" class="headerlink" title="2.函数部署"></a>2.函数部署</h2><p>点击函数服务点击新建，选择自定义创建</p><p><img src="https://i.loli.net/2021/02/24/bdao6mpVvN5WZKR.png"></p><p>名称任意，地域不要选上海，上海有些不稳定</p><p>然后上传你之前弄的文件夹,文件夹是准备那步弄的<img src="https://i.loli.net/2021/02/24/ZiqFVDk5RnCLx4S.png"></p><p>然后点击高级配置，执行超过时间改为60秒<img src="https://i.loli.net/2021/02/24/9MrzXbwTmNo7PkY.png"></p><p>然后添加层<img src="https://i.loli.net/2021/02/24/WDH5n1kIgGj4MKQ.png"></p><p>点击完成后跳转<img src="https://i.loli.net/2021/02/24/HD5lqeC2EKxIcsp.png"></p><p>进入后点击函数管理中的函数代码里，有个切换旧版编制器点击<img src="https://i.loli.net/2021/02/24/uwhYgkOVAiHBIfr.png"></p><p>然后点击部署然后测试就行了</p><h4 id="然后返回结果中出现success就成功了"><a href="#然后返回结果中出现success就成功了" class="headerlink" title="然后返回结果中出现success就成功了"></a>然后返回结果中出现success就成功了</h4><h1 id="四，让代码自动运行"><a href="#四，让代码自动运行" class="headerlink" title="四，让代码自动运行"></a>四，让代码自动运行</h1><p>在触发管理里，创建触发器，选择定时触发，触发周期选择自定义，然后点击提交就OK了</p><p><img src="https://i.loli.net/2021/02/24/5evO81yHgixLaJw.png"></p><h1 id="五，cron表达式"><a href="#五，cron表达式" class="headerlink" title="五，cron表达式"></a>五，cron表达式</h1><p>cron表达式去这个网站学</p><p><a href="https://cloud.tencent.com/document/product/583/9708#cron-.E8.A1.A8.E8.BE.BE.E5.BC.8F">cron教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 打卡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日校园信息收集自动提交</title>
      <link href="2021/02/20/file_name/"/>
      <url>2021/02/20/file_name/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><blockquote><p>前言：今日校园自动打卡是<a href="https://github.com/ZimoLoveShuang/auto-submit/" title="子墨">子墨</a>大佬弄的，此方法只是用来方便同学，当然其他学校<br>也是可以用的。</p></blockquote><h1 id="一-首先"><a href="#一-首先" class="headerlink" title="一,首先"></a>一,首先</h1><h3 id="1-下方链接是看你的学校云端能不能使用"><a href="#1-下方链接是看你的学校云端能不能使用" class="headerlink" title="1.下方链接是看你的学校云端能不能使用"></a>1.下方链接是看你的学校云端能不能使用</h3><p><a href="http://www.zimo.wiki:8080/wisedu-unified-login-api-v1.0/swagger-ui.html#/api-controller/loginUsingGET">http://www.zimo.wiki:8080/wisedu-unified-login-api-v1.0/swagger-ui.html#/api-controller/loginUsingGET</a></p><h3 id="注：如果不能请去子墨的博客解决"><a href="#注：如果不能请去子墨的博客解决" class="headerlink" title="注：如果不能请去子墨的博客解决"></a>注：如果不能请去子墨的博客解决</h3><p>需要三个东西你的学号和密码和你学校的教务系统网站</p><h3 id="2-教务网站在这个地方查找自己学校的教务网站"><a href="#2-教务网站在这个地方查找自己学校的教务网站" class="headerlink" title="2.教务网站在这个地方查找自己学校的教务网站:"></a>2.教务网站在这个地方查找自己学校的教务网站:</h3><p><a href="https://static.campushoy.com/apicache/tenantListSort">https://static.campushoy.com/apicache/tenantListSort</a></p><h1 id="二，代码"><a href="#二，代码" class="headerlink" title="二，代码"></a>二，代码</h1><p>今日校园自动提交所需：</p><h2 id="1-index-py"><a href="#1-index-py" class="headerlink" title="1.index.py:"></a>1.index.py:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import sys</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import yaml</span><br><span class="line">import oss2</span><br><span class="line">from urllib.parse import urlparse</span><br><span class="line">from datetime import datetime, timedelta, timezone</span><br><span class="line">from urllib3.exceptions import InsecureRequestWarning</span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.utils import formataddr</span><br><span class="line"></span><br><span class="line">#debug模式</span><br><span class="line">debug &#x3D; False</span><br><span class="line">if debug:</span><br><span class="line">    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#读取yml配置</span><br><span class="line">def getYmlConfig(yaml_file&#x3D;&#39;config.yml&#39;):</span><br><span class="line">    file &#x3D; open(yaml_file, &#39;r&#39;, encoding&#x3D;&quot;utf-8&quot;)</span><br><span class="line">    file_data &#x3D; file.read()</span><br><span class="line">    file.close()</span><br><span class="line">    config &#x3D; yaml.load(file_data, Loader&#x3D;yaml.FullLoader)</span><br><span class="line">    return dict(config)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#全局配置</span><br><span class="line">config &#x3D; getYmlConfig(yaml_file&#x3D;&#39;config.yml&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取今日校园api</span><br><span class="line">def getCpdailyApis(user):</span><br><span class="line">    apis &#x3D; &#123;&#125;</span><br><span class="line">    user &#x3D; user[&#39;user&#39;]</span><br><span class="line">    schools &#x3D; requests.get(</span><br><span class="line">        url&#x3D;&#39;https:&#x2F;&#x2F;mobile.campushoy.com&#x2F;v6&#x2F;config&#x2F;guest&#x2F;tenant&#x2F;list&#39;, verify&#x3D;not debug).json()[&#39;data&#39;]</span><br><span class="line">    flag &#x3D; True</span><br><span class="line">    for one in schools:</span><br><span class="line">        if one[&#39;name&#39;] &#x3D;&#x3D; user[&#39;school&#39;]:</span><br><span class="line">            if one[&#39;joinType&#39;] &#x3D;&#x3D; &#39;NONE&#39;:</span><br><span class="line">                log(user[&#39;school&#39;] + &#39; 未加入今日校园&#39;)</span><br><span class="line">                exit(-1)</span><br><span class="line">            flag &#x3D; False</span><br><span class="line">            params &#x3D; &#123;</span><br><span class="line">                &#39;ids&#39;: one[&#39;id&#39;]</span><br><span class="line">            &#125;</span><br><span class="line">            res &#x3D; requests.get(url&#x3D;&#39;https:&#x2F;&#x2F;mobile.campushoy.com&#x2F;v6&#x2F;config&#x2F;guest&#x2F;tenant&#x2F;info&#39;, params&#x3D;params,</span><br><span class="line">                               verify&#x3D;not debug)</span><br><span class="line">            data &#x3D; res.json()[&#39;data&#39;][0]</span><br><span class="line">            joinType &#x3D; data[&#39;joinType&#39;]</span><br><span class="line">            idsUrl &#x3D; data[&#39;idsUrl&#39;]</span><br><span class="line">            ampUrl &#x3D; data[&#39;ampUrl&#39;]</span><br><span class="line">            if &#39;campusphere&#39; in ampUrl or &#39;cpdaily&#39; in ampUrl:</span><br><span class="line">                parse &#x3D; urlparse(ampUrl)</span><br><span class="line">                host &#x3D; parse.netloc</span><br><span class="line">                res &#x3D; requests.get(parse.scheme + &#39;:&#x2F;&#x2F;&#39; + host)</span><br><span class="line">                parse &#x3D; urlparse(res.url)</span><br><span class="line">                apis[</span><br><span class="line">                    &#39;login-url&#39;] &#x3D; idsUrl + &#39;&#x2F;login?service&#x3D;&#39; + parse.scheme + r&quot;%3A%2F%2F&quot; + host + r&#39;%2Fportal%2Flogin&#39;</span><br><span class="line">                apis[&#39;host&#39;] &#x3D; host</span><br><span class="line"></span><br><span class="line">            ampUrl2 &#x3D; data[&#39;ampUrl2&#39;]</span><br><span class="line">            if &#39;campusphere&#39; in ampUrl2 or &#39;cpdaily&#39; in ampUrl2:</span><br><span class="line">                parse &#x3D; urlparse(ampUrl2)</span><br><span class="line">                host &#x3D; parse.netloc</span><br><span class="line">                res &#x3D; requests.get(parse.scheme + &#39;:&#x2F;&#x2F;&#39; + host)</span><br><span class="line">                parse &#x3D; urlparse(res.url)</span><br><span class="line">                apis[</span><br><span class="line">                    &#39;login-url&#39;] &#x3D; idsUrl + &#39;&#x2F;login?service&#x3D;&#39; + parse.scheme + r&quot;%3A%2F%2F&quot; + host + r&#39;%2Fportal%2Flogin&#39;</span><br><span class="line">                apis[&#39;host&#39;] &#x3D; host</span><br><span class="line">            break</span><br><span class="line">    if flag:</span><br><span class="line">        log(user[&#39;school&#39;] + &#39; 未找到该院校信息，请检查是否是学校全称错误&#39;)</span><br><span class="line">        exit(-1)</span><br><span class="line">    log(apis)</span><br><span class="line">    return apis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取当前utc时间，并格式化为北京时间</span><br><span class="line">def getTimeStr():</span><br><span class="line">    utc_dt &#x3D; datetime.utcnow().replace(tzinfo&#x3D;timezone.utc)</span><br><span class="line">    bj_dt &#x3D; utc_dt.astimezone(timezone(timedelta(hours&#x3D;8)))</span><br><span class="line">    return bj_dt.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#输出调试信息，并及时刷新缓冲区</span><br><span class="line">def log(content):</span><br><span class="line">    print(getTimeStr() + &#39; &#39; + str(content))</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#登陆并返回session</span><br><span class="line">def getSession(user, loginUrl):</span><br><span class="line">    user &#x3D; user[&#39;user&#39;]</span><br><span class="line">    params &#x3D; &#123;</span><br><span class="line">        &#39;login_url&#39;: loginUrl,</span><br><span class="line">        # 保证学工号和密码正确下面两项就不需要配置</span><br><span class="line">        &#39;needcaptcha_url&#39;: &#39;&#39;,</span><br><span class="line">        &#39;captcha_url&#39;: &#39;&#39;,</span><br><span class="line">        &#39;username&#39;: user[&#39;username&#39;],</span><br><span class="line">        &#39;password&#39;: user[&#39;password&#39;]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cookies &#x3D; &#123;&#125;</span><br><span class="line">    # 借助上一个项目开放出来的登陆API，模拟登陆</span><br><span class="line">    res &#x3D; requests.post(config[&#39;login&#39;][&#39;api&#39;], params, verify&#x3D;not debug)</span><br><span class="line">    cookieStr &#x3D; str(res.json()[&#39;cookies&#39;])</span><br><span class="line">    log(cookieStr)</span><br><span class="line">    if cookieStr &#x3D;&#x3D; &#39;None&#39;:</span><br><span class="line">        log(res.json())</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line">    # 解析cookie</span><br><span class="line">    for line in cookieStr.split(&#39;;&#39;):</span><br><span class="line">        name, value &#x3D; line.strip().split(&#39;&#x3D;&#39;, 1)</span><br><span class="line">        cookies[name] &#x3D; value</span><br><span class="line">    session &#x3D; requests.session()</span><br><span class="line">    session.cookies &#x3D; requests.utils.cookiejar_from_dict(cookies)</span><br><span class="line">    return session</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查询表单</span><br><span class="line">def queryForm(session, apis):</span><br><span class="line">    host &#x3D; apis[&#39;host&#39;]</span><br><span class="line">    headers &#x3D; &#123;</span><br><span class="line">        &#39;Accept&#39;: &#39;application&#x2F;json, text&#x2F;plain, *&#x2F;*&#39;,</span><br><span class="line">        &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Linux; Android 4.4.4; OPPO R11 Plus Build&#x2F;KTU84P) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;33.0.0.0 Safari&#x2F;537.36 yiban&#x2F;8.1.11 cpdaily&#x2F;8.1.11 wisedu&#x2F;8.1.11&#39;,</span><br><span class="line">        &#39;content-type&#39;: &#39;application&#x2F;json&#39;,</span><br><span class="line">        &#39;Accept-Encoding&#39;: &#39;gzip,deflate&#39;,</span><br><span class="line">        &#39;Accept-Language&#39;: &#39;zh-CN,en-US;q&#x3D;0.8&#39;,</span><br><span class="line">        &#39;Content-Type&#39;: &#39;application&#x2F;json;charset&#x3D;UTF-8&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    queryCollectWidUrl &#x3D; &#39;https:&#x2F;&#x2F;&#123;host&#125;&#x2F;wec-counselor-collector-apps&#x2F;stu&#x2F;collector&#x2F;queryCollectorProcessingList&#39;.format(</span><br><span class="line">        host&#x3D;host)</span><br><span class="line">    params &#x3D; &#123;</span><br><span class="line">        &#39;pageSize&#39;: 6,</span><br><span class="line">        &#39;pageNumber&#39;: 1</span><br><span class="line">    &#125;</span><br><span class="line">    res &#x3D; session.post(queryCollectWidUrl, headers&#x3D;headers,</span><br><span class="line">                       data&#x3D;json.dumps(params), verify&#x3D;not debug)</span><br><span class="line">    if len(res.json()[&#39;datas&#39;][&#39;rows&#39;]) &lt; 1:</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line">    collectWid &#x3D; res.json()[&#39;datas&#39;][&#39;rows&#39;][0][&#39;wid&#39;]</span><br><span class="line">    formWid &#x3D; res.json()[&#39;datas&#39;][&#39;rows&#39;][0][&#39;formWid&#39;]</span><br><span class="line"></span><br><span class="line">    detailCollector &#x3D; &#39;https:&#x2F;&#x2F;&#123;host&#125;&#x2F;wec-counselor-collector-apps&#x2F;stu&#x2F;collector&#x2F;detailCollector&#39;.format(</span><br><span class="line">        host&#x3D;host)</span><br><span class="line">    res &#x3D; session.post(url&#x3D;detailCollector, headers&#x3D;headers,</span><br><span class="line">                       data&#x3D;json.dumps(&#123;&quot;collectorWid&quot;: collectWid&#125;), verify&#x3D;not debug)</span><br><span class="line">    schoolTaskWid &#x3D; res.json()[&#39;datas&#39;][&#39;collector&#39;][&#39;schoolTaskWid&#39;]</span><br><span class="line"></span><br><span class="line">    getFormFields &#x3D; &#39;https:&#x2F;&#x2F;&#123;host&#125;&#x2F;wec-counselor-collector-apps&#x2F;stu&#x2F;collector&#x2F;getFormFields&#39;.format(</span><br><span class="line">        host&#x3D;host)</span><br><span class="line">    res &#x3D; session.post(url&#x3D;getFormFields, headers&#x3D;headers, data&#x3D;json.dumps(</span><br><span class="line">        &#123;&quot;pageSize&quot;: 100, &quot;pageNumber&quot;: 1, &quot;formWid&quot;: formWid, &quot;collectorWid&quot;: collectWid&#125;), verify&#x3D;not debug)</span><br><span class="line"></span><br><span class="line">    form &#x3D; res.json()[&#39;datas&#39;][&#39;rows&#39;]</span><br><span class="line">    return &#123;&#39;collectWid&#39;: collectWid, &#39;formWid&#39;: formWid, &#39;schoolTaskWid&#39;: schoolTaskWid, &#39;form&#39;: form&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#填写form</span><br><span class="line">def fillForm(session, form, host):</span><br><span class="line">    sort &#x3D; 1</span><br><span class="line">    for formItem in form[:]:</span><br><span class="line">        # 只处理必填项</span><br><span class="line">        if formItem[&#39;isRequired&#39;] &#x3D;&#x3D; 1:</span><br><span class="line">            default &#x3D; config[&#39;cpdaily&#39;][&#39;defaults&#39;][sort - 1][&#39;default&#39;]</span><br><span class="line">            if formItem[&#39;title&#39;] !&#x3D; default[&#39;title&#39;]:</span><br><span class="line">                log(&#39;第%d个默认配置不正确，请检查&#39; % sort)</span><br><span class="line">                exit(-1)</span><br><span class="line">            # 文本直接赋值</span><br><span class="line">            if formItem[&#39;fieldType&#39;] &#x3D;&#x3D; 1 or formItem[&#39;fieldType&#39;] &#x3D;&#x3D; 5:</span><br><span class="line">                formItem[&#39;value&#39;] &#x3D; default[&#39;value&#39;]</span><br><span class="line">            # 单选框需要删掉多余的选项</span><br><span class="line">            if formItem[&#39;fieldType&#39;] &#x3D;&#x3D; 2:</span><br><span class="line">                # 填充默认值</span><br><span class="line">                formItem[&#39;value&#39;] &#x3D; default[&#39;value&#39;]</span><br><span class="line">                fieldItems &#x3D; formItem[&#39;fieldItems&#39;]</span><br><span class="line">                for i in range(0, len(fieldItems))[::-1]:</span><br><span class="line">                    if fieldItems[i][&#39;content&#39;] !&#x3D; default[&#39;value&#39;]:</span><br><span class="line">                        del fieldItems[i]</span><br><span class="line">            # 多选需要分割默认选项值，并且删掉无用的其他选项</span><br><span class="line">            if formItem[&#39;fieldType&#39;] &#x3D;&#x3D; 3:</span><br><span class="line">                fieldItems &#x3D; formItem[&#39;fieldItems&#39;]</span><br><span class="line">                defaultValues &#x3D; default[&#39;value&#39;].split(&#39;,&#39;)</span><br><span class="line">                for i in range(0, len(fieldItems))[::-1]:</span><br><span class="line">                    flag &#x3D; True</span><br><span class="line">                    for j in range(0, len(defaultValues))[::-1]:</span><br><span class="line">                        if fieldItems[i][&#39;content&#39;] &#x3D;&#x3D; defaultValues[j]:</span><br><span class="line">                            # 填充默认值</span><br><span class="line">                            formItem[&#39;value&#39;] +&#x3D; defaultValues[j] + &#39; &#39;</span><br><span class="line">                            flag &#x3D; False</span><br><span class="line">                    if flag:</span><br><span class="line">                        del fieldItems[i]</span><br><span class="line">            # 图片需要上传到阿里云oss</span><br><span class="line">            if formItem[&#39;fieldType&#39;] &#x3D;&#x3D; 4:</span><br><span class="line">                fileName &#x3D; uploadPicture(session, default[&#39;value&#39;], host)</span><br><span class="line">                formItem[&#39;value&#39;] &#x3D; getPictureUrl(session, fileName, host)</span><br><span class="line">            log(&#39;必填问题%d：&#39; % sort + formItem[&#39;title&#39;])</span><br><span class="line">            log(&#39;答案%d：&#39; % sort + formItem[&#39;value&#39;])</span><br><span class="line">            sort +&#x3D; 1</span><br><span class="line">        else:</span><br><span class="line">            form.remove(formItem)</span><br><span class="line">    # print(form)</span><br><span class="line">    return form</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#上传图片到阿里云oss</span><br><span class="line">def uploadPicture(session, image, host):</span><br><span class="line">    url &#x3D; &#39;https:&#x2F;&#x2F;&#123;host&#125;&#x2F;wec-counselor-collector-apps&#x2F;stu&#x2F;collector&#x2F;getStsAccess&#39;.format(</span><br><span class="line">        host&#x3D;host)</span><br><span class="line">    res &#x3D; session.post(url&#x3D;url, headers&#x3D;&#123;</span><br><span class="line">                       &#39;content-type&#39;: &#39;application&#x2F;json&#39;&#125;, data&#x3D;json.dumps(&#123;&#125;), verify&#x3D;not debug)</span><br><span class="line">    datas &#x3D; res.json().get(&#39;datas&#39;)</span><br><span class="line">    fileName &#x3D; datas.get(&#39;fileName&#39;)</span><br><span class="line">    accessKeyId &#x3D; datas.get(&#39;accessKeyId&#39;)</span><br><span class="line">    accessSecret &#x3D; datas.get(&#39;accessKeySecret&#39;)</span><br><span class="line">    securityToken &#x3D; datas.get(&#39;securityToken&#39;)</span><br><span class="line">    endPoint &#x3D; datas.get(&#39;endPoint&#39;)</span><br><span class="line">    bucket &#x3D; datas.get(&#39;bucket&#39;)</span><br><span class="line">    bucket &#x3D; oss2.Bucket(oss2.Auth(access_key_id&#x3D;accessKeyId,</span><br><span class="line">                                   access_key_secret&#x3D;accessSecret), endPoint, bucket)</span><br><span class="line">    with open(image, &quot;rb&quot;) as f:</span><br><span class="line">        data &#x3D; f.read()</span><br><span class="line">    bucket.put_object(key&#x3D;fileName, headers&#x3D;&#123;</span><br><span class="line">                      &#39;x-oss-security-token&#39;: securityToken&#125;, data&#x3D;data)</span><br><span class="line">    res &#x3D; bucket.sign_url(&#39;PUT&#39;, fileName, 60)</span><br><span class="line">    # log(res)</span><br><span class="line">    return fileName</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取图片上传位置</span><br><span class="line">def getPictureUrl(session, fileName, host):</span><br><span class="line">    url &#x3D; &#39;https:&#x2F;&#x2F;&#123;host&#125;&#x2F;wec-counselor-collector-apps&#x2F;stu&#x2F;collector&#x2F;previewAttachment&#39;.format(</span><br><span class="line">        host&#x3D;host)</span><br><span class="line">    data &#x3D; &#123;</span><br><span class="line">        &#39;ossKey&#39;: fileName</span><br><span class="line">    &#125;</span><br><span class="line">    res &#x3D; session.post(url&#x3D;url, headers&#x3D;&#123;</span><br><span class="line">                       &#39;content-type&#39;: &#39;application&#x2F;json&#39;&#125;, data&#x3D;json.dumps(data), verify&#x3D;not debug)</span><br><span class="line">    photoUrl &#x3D; res.json().get(&#39;datas&#39;)</span><br><span class="line">    return photoUrl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#提交表单</span><br><span class="line">def submitForm(formWid, address, collectWid, schoolTaskWid, form, session, host):</span><br><span class="line">    headers &#x3D; &#123;</span><br><span class="line">        &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Linux; Android 4.4.4; OPPO R11 Plus Build&#x2F;KTU84P) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;33.0.0.0 Safari&#x2F;537.36 okhttp&#x2F;3.12.4&#39;,</span><br><span class="line">        &#39;CpdailyStandAlone&#39;: &#39;0&#39;,</span><br><span class="line">        &#39;extension&#39;: &#39;1&#39;,</span><br><span class="line">        &#39;Cpdaily-Extension&#39;: &#39;eZbW2qLZT0G0VbYqnj5mz5UCyZiuS+Mht0ro4VCSTgTancCpi4ru3IpfZibLN2Q4JR3dl7wYTXnTi5dzfAwbYcs5FB4VPqOTrcYNVjoRY9h9J7sxA1MWIWZxiEC7iuzXwAeEjrGmnHnX3P7mprZW66fbhNsIrM938cVo6aK7fgdQx6vGY7OVJBS+kqwk&#x2F;xE2ipLqV0ro4QNZ9u&#x2F;6G9MUbyd7QghLIM9PIRJTrd6TzoYPFBHqDHIY57dHHUBUC8RzfvreU&#x2F;2o5sY&#x3D;&#39;,</span><br><span class="line">        &#39;Content-Type&#39;: &#39;application&#x2F;json; charset&#x3D;utf-8&#39;,</span><br><span class="line">        # 请注意这个应该和配置文件中的host保持一致</span><br><span class="line">        &#39;Host&#39;: host,</span><br><span class="line">        &#39;Connection&#39;: &#39;Keep-Alive&#39;,</span><br><span class="line">        &#39;Accept-Encoding&#39;: &#39;gzip&#39;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 默认正常的提交参数json</span><br><span class="line">    params &#x3D; &#123;&quot;formWid&quot;: formWid, &quot;address&quot;: address, &quot;collectWid&quot;: collectWid, &quot;schoolTaskWid&quot;: schoolTaskWid,</span><br><span class="line">              &quot;form&quot;: form,&quot;uaIsCpadaily&quot;: True,&quot;latitude&quot;:, &quot;longitude&quot;:&#125;</span><br><span class="line">    # print(params)</span><br><span class="line">    submitForm &#x3D; &#39;https:&#x2F;&#x2F;&#123;host&#125;&#x2F;wec-counselor-collector-apps&#x2F;stu&#x2F;collector&#x2F;submitForm&#39;.format(</span><br><span class="line">        host&#x3D;host)</span><br><span class="line">    r &#x3D; session.post(url&#x3D;submitForm, headers&#x3D;headers,</span><br><span class="line">                     data&#x3D;json.dumps(params), verify&#x3D;not debug)</span><br><span class="line">    msg &#x3D; r.json()[&#39;message&#39;]</span><br><span class="line">    return msg</span><br><span class="line"></span><br><span class="line">title_text &#x3D; &#39;今日校园疫结果通知&#39;</span><br><span class="line"></span><br><span class="line">#发送邮件通知</span><br><span class="line">def sendMessage(send, msg):</span><br><span class="line">    if send !&#x3D; &#39;&#39;:</span><br><span class="line">        log(&#39;正在发送邮件通知。。。&#39;)</span><br><span class="line">        res &#x3D; requests.post(url&#x3D;&#39;http:&#x2F;&#x2F;www.zimo.wiki:8080&#x2F;mail-sender&#x2F;sendMail&#39;,</span><br><span class="line">                            data&#x3D;&#123;&#39;title&#39;: title_text, &#39;content&#39;: getTimeStr() + str(msg), &#39;to&#39;: send&#125;)</span><br><span class="line"></span><br><span class="line">        code &#x3D; res.json()[&#39;code&#39;]</span><br><span class="line">        if code &#x3D;&#x3D; 0:</span><br><span class="line">            log(&#39;发送邮件通知成功。。。&#39;)</span><br><span class="line">        else:</span><br><span class="line">            log(&#39;发送邮件通知失败。。。&#39;)</span><br><span class="line">            log(res.json())</span><br><span class="line"></span><br><span class="line">def sendEmail(send,msg):</span><br><span class="line">    my_sender&#x3D; config[&#39;Info&#39;][&#39;Email&#39;][&#39;account&#39;]   # 发件人邮箱账号</span><br><span class="line">    my_pass &#x3D; config[&#39;Info&#39;][&#39;Email&#39;][&#39;password&#39;]         # 发件人邮箱密码</span><br><span class="line">    my_user &#x3D; send      # 收件人邮箱账号，我这边发送给自己</span><br><span class="line">    try:</span><br><span class="line">        msg&#x3D;MIMEText(getTimeStr() + str(msg),&#39;plain&#39;,&#39;utf-8&#39;)</span><br><span class="line">        msg[&#39;From&#39;]&#x3D;formataddr([&quot;FromRunoob&quot;,my_sender])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号</span><br><span class="line">        msg[&#39;To&#39;]&#x3D;formataddr([&quot;FK&quot;,my_user])              # 括号里的对应收件人邮箱昵称、收件人邮箱账号</span><br><span class="line">        msg[&#39;Subject&#39;]&#x3D;title_text               # 邮件的主题，也可以说是标题</span><br><span class="line"></span><br><span class="line">        server&#x3D;smtplib.SMTP_SSL(config[&#39;Info&#39;][&#39;Email&#39;][&#39;server&#39;], config[&#39;Info&#39;][&#39;Email&#39;][&#39;port&#39;])  # 发件人邮箱中的SMTP服务器，端口是25</span><br><span class="line">        server.login(my_sender, my_pass)  # 括号中对应的是发件人邮箱账号、邮箱密码</span><br><span class="line">        server.sendmail(my_sender,[my_user,],msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span><br><span class="line">        server.quit()  # 关闭连接</span><br><span class="line">    except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 ret&#x3D;False</span><br><span class="line">        log(&quot;邮件发送失败&quot;)</span><br><span class="line">    else: print(&quot;邮件发送成功&quot;)</span><br><span class="line"></span><br><span class="line">#server酱通知</span><br><span class="line">def sendServerChan(msg):</span><br><span class="line">    log(&#39;正在发送Server酱。。。&#39;)</span><br><span class="line">    res &#x3D; requests.post(url&#x3D;&#39;https:&#x2F;&#x2F;sc.ftqq.com&#x2F;&#123;0&#125;.send&#39;.format(config[&#39;Info&#39;][&#39;ServerChan&#39;]),</span><br><span class="line">                            data&#x3D;&#123;&#39;text&#39;: title_text, &#39;desp&#39;: getTimeStr() + &quot;\n&quot; + str(msg)&#125;)</span><br><span class="line">    code &#x3D; res.json()[&#39;errmsg&#39;]</span><br><span class="line">    if code &#x3D;&#x3D; &#39;success&#39;:</span><br><span class="line">        log(&#39;发送Server酱通知成功。。。&#39;)</span><br><span class="line">    else:</span><br><span class="line">        log(&#39;发送Server酱通知失败。。。&#39;)</span><br><span class="line">        log(&#39;Server酱返回结果&#39;+code)</span><br><span class="line"></span><br><span class="line">#Qmsg酱通知</span><br><span class="line">def sendQmsgChan(msg):</span><br><span class="line">    log(&#39;正在发送Qmsg酱。。。&#39;)</span><br><span class="line">    res &#x3D; requests.post(url&#x3D;&#39;https:&#x2F;&#x2F;qmsg.zendee.cn:443&#x2F;send&#x2F;&#123;0&#125;&#39;.format(config[&#39;Info&#39;][&#39;Qsmg&#39;]),</span><br><span class="line">                            data&#x3D;&#123;&#39;msg&#39;: title_text + &#39;\n时间：&#39; + getTimeStr() + &quot;\n 返回结果：&quot; + str(msg)&#125;)</span><br><span class="line">    code &#x3D; res.json()[&#39;success&#39;]</span><br><span class="line">    if code:</span><br><span class="line">        log(&#39;发送Qmsg酱通知成功。。。&#39;)</span><br><span class="line">    else:</span><br><span class="line">        log(&#39;发送Qmsg酱通知失败。。。&#39;)</span><br><span class="line">        log(&#39;Qmsg酱返回结果&#39;+code)</span><br><span class="line"></span><br><span class="line">#综合提交</span><br><span class="line">def InfoSubmit(msg, send&#x3D;None):</span><br><span class="line">    if(None !&#x3D; send):</span><br><span class="line">        if(config[&#39;Info&#39;][&#39;Email&#39;][&#39;enable&#39;]): sendEmail(send,msg)</span><br><span class="line">        else: sendMessage(send, msg)</span><br><span class="line">    if(config[&#39;Info&#39;][&#39;ServerChan&#39;]): sendServerChan(msg)</span><br><span class="line">    if(config[&#39;Info&#39;][&#39;Qsmg&#39;]): sendQmsgChan(msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main_handler(event, context):</span><br><span class="line">    try:</span><br><span class="line">        for user in config[&#39;users&#39;]:</span><br><span class="line">            log(&#39;当前用户：&#39; + str(user[&#39;user&#39;][&#39;username&#39;]))</span><br><span class="line">            apis &#x3D; getCpdailyApis(user)</span><br><span class="line">            log(&#39;脚本开始执行。。。&#39;)</span><br><span class="line">            log(&#39;开始模拟登陆。。。&#39;)</span><br><span class="line">            session &#x3D; getSession(user, apis[&#39;login-url&#39;])</span><br><span class="line">            if session !&#x3D; None:</span><br><span class="line">                log(&#39;模拟登陆成功。。。&#39;)</span><br><span class="line">                log(&#39;正在查询最新待填写问卷。。。&#39;)</span><br><span class="line">                params &#x3D; queryForm(session, apis)</span><br><span class="line">                if str(params) &#x3D;&#x3D; &#39;None&#39;:</span><br><span class="line">                    log(&#39;获取最新待填写问卷失败，可能是辅导员还没有发布。。。&#39;)</span><br><span class="line">                    InfoSubmit(&#39;没有新问卷&#39;)</span><br><span class="line">                    exit(-1)</span><br><span class="line">                log(&#39;查询最新待填写问卷成功。。。&#39;)</span><br><span class="line">                log(&#39;正在自动填写问卷。。。&#39;)</span><br><span class="line">                form &#x3D; fillForm(session, params[&#39;form&#39;], apis[&#39;host&#39;])</span><br><span class="line">                log(&#39;填写问卷成功。。。&#39;)</span><br><span class="line">                log(&#39;正在自动提交。。。&#39;)</span><br><span class="line">                msg &#x3D; submitForm(params[&#39;formWid&#39;], user[&#39;user&#39;][&#39;address&#39;], params[&#39;collectWid&#39;],</span><br><span class="line">                                 params[&#39;schoolTaskWid&#39;], form, session, apis[&#39;host&#39;])</span><br><span class="line">                if msg &#x3D;&#x3D; &#39;SUCCESS&#39;:</span><br><span class="line">                    log(&#39;自动提交成功！&#39;)</span><br><span class="line">                    InfoSubmit(&#39;自动提交成功！&#39;, user[&#39;user&#39;][&#39;email&#39;])</span><br><span class="line">                elif msg &#x3D;&#x3D; &#39;该收集已填写无需再次填写&#39;:</span><br><span class="line">                    log(&#39;今日已提交！&#39;)</span><br><span class="line">                    # InfoSubmit(&#39;今日已提交！&#39;, user[&#39;user&#39;][&#39;email&#39;])</span><br><span class="line">                    InfoSubmit(&#39;今日已提交！&#39;)</span><br><span class="line">                else:</span><br><span class="line">                    log(&#39;自动提交失败。。。&#39;)</span><br><span class="line">                    log(&#39;错误是&#39; + msg)</span><br><span class="line">                    InfoSubmit(&#39;自动提交失败！错误是&#39; + msg, user[&#39;user&#39;][&#39;email&#39;])</span><br><span class="line">                    exit(-1)</span><br><span class="line">            else:</span><br><span class="line">                log(&#39;模拟登陆失败。。。&#39;)</span><br><span class="line">                log(&#39;原因可能是学号或密码错误，请检查配置后，重启脚本。。。&#39;)</span><br><span class="line">                exit(-1)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        InfoSubmit(&quot;出现问题了！&quot;+str(e))</span><br><span class="line">        raise e</span><br><span class="line">    else:</span><br><span class="line">        return &#39;success&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#配合Windows计划任务等使用</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    print(main_handler(&#123;&#125;, &#123;&#125;))</span><br><span class="line">    # for user in config[&#39;users&#39;]:</span><br><span class="line">    #     log(getCpdailyApis(user))</span><br></pre></td></tr></table></figure><h2 id="2-config-yml"><a href="#2-config-yml" class="headerlink" title="2.config.yml:"></a>2.config.yml:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#登陆相关配置</span><br><span class="line">login:</span><br><span class="line">  #开放的模拟登陆api服务器地址</span><br><span class="line">  api: &quot;http:&#x2F;&#x2F;49.235.105.52:8080&#x2F;wisedu-unified-login-api-v1.0&#x2F;api&#x2F;login&quot;</span><br><span class="line">#用户组配置</span><br><span class="line">users:</span><br><span class="line">  #单个用户配置</span><br><span class="line">  - user:</span><br><span class="line">      #username 学号或者工号</span><br><span class="line">      username: &#39;&#39;</span><br><span class="line">      #password 密码</span><br><span class="line">      password: &#39;&#39;</span><br><span class="line">      #address 地址，定位信息</span><br><span class="line">      address: </span><br><span class="line">      #email 接受通知消息的邮箱</span><br><span class="line">      email: </span><br><span class="line">      #lon 当前位置经度，可以访问http:&#x2F;&#x2F;zuobiao.ay800.com&#x2F;s&#x2F;27&#x2F;index.php获取</span><br><span class="line">      longitude: &quot;&quot;</span><br><span class="line">      #lat 当前位置纬度</span><br><span class="line">      latitude: &quot;&quot;</span><br><span class="line">      #school 学校全称</span><br><span class="line">      school: </span><br><span class="line">#今日校园相关配置</span><br><span class="line">cpdaily:</span><br><span class="line">  #表单组默认选项配置</span><br><span class="line">  defaults:</span><br><span class="line">    #表单默认选项配置，按顺序，注意，只有标必填项的才处理，不会配置就执行generate.py</span><br><span class="line">    - default:</span><br><span class="line">        title: 今天你的所在地是？</span><br><span class="line">        type: 1</span><br><span class="line">        value: xxx&#x2F;xxx&#x2F;xxx</span><br><span class="line">    - default:</span><br><span class="line">        title: 今天你的体温是多少？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 37.2℃及以下</span><br><span class="line">    - default:</span><br><span class="line">        title: 今天你的身体状况是？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 健康</span><br><span class="line">    - default:</span><br><span class="line">        title: 近14天你或你的共同居住人是否有疫情中、高风险区域人员接触史？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 否</span><br><span class="line">    - default:</span><br><span class="line">        title: 近14天你或你的共同居住人是否和确诊、疑似病人接触过？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 否</span><br><span class="line">    - default:</span><br><span class="line">        title: 近14天你或你的共同居住人是否是确诊、疑似病例？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 否</span><br><span class="line">    - default:</span><br><span class="line">        title: 你或你的共同居住人目前是否被医学隔离？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 否</span><br><span class="line">    - default:</span><br><span class="line">        title: 今天你当地的健康码颜色是？</span><br><span class="line">        type: 2</span><br><span class="line">        value: 绿色</span><br><span class="line">    - default:</span><br><span class="line">        title: 本人是否承诺以上所填报的全部内容均属实、准确，不存在任何隐瞒与不实的情况，更无遗漏之处</span><br><span class="line">        type: 2</span><br><span class="line">        value: 是</span><br><span class="line"></span><br><span class="line">Info:</span><br><span class="line">  ServerChan: # 填写Server酱的SCKEY</span><br><span class="line">  Qsmg:  #填写qsmg酱的SCKEY</span><br><span class="line">  Email:</span><br><span class="line">    enable: true</span><br><span class="line">    server: smtp.qq.com # 填写邮件的smtp服务器</span><br><span class="line">    port: 465 # 填写邮件服务器的端口号</span><br><span class="line">    account: &#39;&#39; # 邮件服务器登录用户名</span><br><span class="line">    password: &#39;&#39; # 邮件服务器登录密码&#96;</span><br></pre></td></tr></table></figure><h2 id="3-generate-py"><a href="#3-generate-py" class="headerlink" title="3.generate.py:"></a>3.generate.py:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import index as app</span><br><span class="line">import yaml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 生成默认配置</span><br><span class="line">def generate():</span><br><span class="line">    config &#x3D; app.config</span><br><span class="line">    user &#x3D; config[&#39;users&#39;][0]</span><br><span class="line">    apis &#x3D; app.getCpdailyApis(user)</span><br><span class="line">    session &#x3D; app.getSession(user, apis[&#39;login-url&#39;])</span><br><span class="line">    form &#x3D; dict(app.queryForm(session, apis))[&#39;form&#39;]</span><br><span class="line">    # app.log(form)</span><br><span class="line">    defaults &#x3D; []</span><br><span class="line">    sort &#x3D; 1</span><br><span class="line">    for formItem in form:</span><br><span class="line">        if formItem[&#39;isRequired&#39;] &#x3D;&#x3D; 1:</span><br><span class="line">            default &#x3D; &#123;&#125;</span><br><span class="line">            one &#x3D; &#123;&#125;</span><br><span class="line">            default[&#39;title&#39;] &#x3D; formItem[&#39;title&#39;]</span><br><span class="line">            default[&#39;type&#39;] &#x3D; formItem[&#39;fieldType&#39;]</span><br><span class="line">            print(&#39;问题%d：&#39; % sort + default[&#39;title&#39;])</span><br><span class="line">            if default[&#39;type&#39;] &#x3D;&#x3D; 1 or default[&#39;type&#39;] &#x3D;&#x3D; 5:</span><br><span class="line">                default[&#39;value&#39;] &#x3D; input(&quot;请输入文本：&quot;)</span><br><span class="line">            if default[&#39;type&#39;] &#x3D;&#x3D; 2:</span><br><span class="line">                fieldItems &#x3D; formItem[&#39;fieldItems&#39;]</span><br><span class="line">                num &#x3D; 1</span><br><span class="line">                for fieldItem in fieldItems:</span><br><span class="line">                    print(&#39;\t%d &#39; % num + fieldItem[&#39;content&#39;])</span><br><span class="line">                    num +&#x3D; 1</span><br><span class="line">                choose &#x3D; int(input(&quot;请输入序号：&quot;))</span><br><span class="line">                if choose &lt; 1 or choose &gt; num:</span><br><span class="line">                    print(&#39;输入错误，请重新执行此脚本&#39;)</span><br><span class="line">                    exit(-1)</span><br><span class="line">                default[&#39;value&#39;] &#x3D; fieldItems[choose - 1][&#39;content&#39;]</span><br><span class="line">            if default[&#39;type&#39;] &#x3D;&#x3D; 3:</span><br><span class="line">                fieldItems &#x3D; formItem[&#39;fieldItems&#39;]</span><br><span class="line">                num &#x3D; 1</span><br><span class="line">                for fieldItem in fieldItems:</span><br><span class="line">                    print(&#39;\t%d &#39; % num + fieldItem[&#39;content&#39;])</span><br><span class="line">                    num +&#x3D; 1</span><br><span class="line">                chooses &#x3D; list(map(int, input(&#39;请输入序号（可输入多个，请用空格隔开）：&#39;).split()))</span><br><span class="line">                default[&#39;value&#39;] &#x3D; &#39;&#39;</span><br><span class="line">                for i in range(0, len(chooses)):</span><br><span class="line">                    choose &#x3D; chooses[i]</span><br><span class="line">                    if choose &lt; 1 or choose &gt; num:</span><br><span class="line">                        print(&#39;输入错误，请重新执行此脚本&#39;)</span><br><span class="line">                        exit(-1)</span><br><span class="line">                    if i !&#x3D; len(chooses) - 1:</span><br><span class="line">                        default[&#39;value&#39;] +&#x3D; fieldItems[choose - 1][&#39;content&#39;] + &#39;,&#39;</span><br><span class="line">                    else:</span><br><span class="line">                        default[&#39;value&#39;] +&#x3D; fieldItems[choose - 1][&#39;content&#39;]</span><br><span class="line">            if default[&#39;type&#39;] &#x3D;&#x3D; 4:</span><br><span class="line">                default[&#39;value&#39;] &#x3D; input(&quot;请输入图片名称：&quot;)</span><br><span class="line">            one[&#39;default&#39;] &#x3D; default</span><br><span class="line">            defaults.append(one)</span><br><span class="line">            sort +&#x3D; 1</span><br><span class="line">    print(&#39;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;分隔线&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#39;)</span><br><span class="line">    print(yaml.dump(defaults, allow_unicode&#x3D;True))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    generate()</span><br></pre></td></tr></table></figure><h1 id="层依赖下载：dependency-zip密码-gory"><a href="#层依赖下载：dependency-zip密码-gory" class="headerlink" title="层依赖下载：dependency.zip密码:gory"></a>层依赖下载：<a href="https://wws.lanzous.com/i9UYUm3pted">dependency.zip</a>密码:gory</h1><h1 id="三-注意："><a href="#三-注意：" class="headerlink" title="三,注意："></a>三,注意：</h1><h2 id="1-config-yml是添加今日校园的账户信息、邮箱、address、经纬度以及第一个问题的所在地。"><a href="#1-config-yml是添加今日校园的账户信息、邮箱、address、经纬度以及第一个问题的所在地。" class="headerlink" title="1.config.yml是添加今日校园的账户信息、邮箱、address、经纬度以及第一个问题的所在地。"></a>1.config.yml是添加今日校园的账户信息、邮箱、address、经纬度以及第一个问题的所在地。</h2><h2 id="2-在index-py中第264行左右中（”latitude”-“longitude”-）这两个需要填写，这俩数是经纬度，经纬度的查询在这里：（经纬度）。"><a href="#2-在index-py中第264行左右中（”latitude”-“longitude”-）这两个需要填写，这俩数是经纬度，经纬度的查询在这里：（经纬度）。" class="headerlink" title="2.在index.py中第264行左右中（”latitude”:, “longitude”:）这两个需要填写，这俩数是经纬度，经纬度的查询在这里：（经纬度）。"></a>2.在index.py中第264行左右中（”latitude”:, “longitude”:）这两个需要填写，这俩数是经纬度，经纬度的查询在这里：（<a href="https://lbs.qq.com/tool/getpoint/index.html">经纬度</a>）。</h2><h2 id="3-我的API可能会失效，建议使用子墨的api-但子墨的api人用的多，可能会超时，所以有服务器的可以自建api，具体教程请去子墨的博客。子墨的API。"><a href="#3-我的API可能会失效，建议使用子墨的api-但子墨的api人用的多，可能会超时，所以有服务器的可以自建api，具体教程请去子墨的博客。子墨的API。" class="headerlink" title="3.我的API可能会失效，建议使用子墨的api,但子墨的api人用的多，可能会超时，所以有服务器的可以自建api，具体教程请去子墨的博客。子墨的API。"></a>3.我的API可能会失效，建议使用子墨的api,但子墨的api人用的多，可能会超时，所以有服务器的可以自建api，具体教程请去子墨的博客。子墨的<a href="http://www.zimo.wiki:8080/wisedu-unified-login-api-v1.0/api/login">API</a>。</h2><h2 id="4-qmsg酱key填写到config-yml中，qmsg酱这是网站。"><a href="#4-qmsg酱key填写到config-yml中，qmsg酱这是网站。" class="headerlink" title="4.qmsg酱key填写到config.yml中，qmsg酱这是网站。"></a>4.qmsg酱key填写到config.yml中，<a href="https://qmsg.zendee.cn/index.html">qmsg酱</a>这是网站。</h2><h3 id="注：sever酱不能用了"><a href="#注：sever酱不能用了" class="headerlink" title="注：sever酱不能用了"></a>注：sever酱不能用了</h3><h2 id="5-generate-py是配置config-yml里问题的文件，当然你也可以使用抓包获取"><a href="#5-generate-py是配置config-yml里问题的文件，当然你也可以使用抓包获取" class="headerlink" title="5.generate.py是配置config.yml里问题的文件，当然你也可以使用抓包获取"></a>5.generate.py是配置config.yml里问题的文件，当然你也可以使用抓包获取</h2>]]></content>
      
      
      <categories>
          
          <category> 打卡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打卡 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
